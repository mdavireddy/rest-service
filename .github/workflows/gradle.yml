name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
env:
  SNOW_URL: ${{ secrets.SNOW_URL }}
  SNOW_TOKEN: ${{ secrets.SNOW_TOKEN }}
  SNOW_TOOLID: ${{ secrets.SNOW_TOOLID }}
  GITHUB_OUTPUT: '/app'

jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v4
#    - name: Set up JDK 17
#      uses: actions/setup-java@v4
 #     with:
  #      java-version: '17'
  #      distribution: 'temurin'
   # - name: Build with Gradle
   #   uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
    #  with: 
    #    arguments: build
  ServiceNowDevOpsChange:
    runs-on: ubuntu-latest
    container:
      image: mdavireddy/sndevops:1.0.0
      options: --user node --volume "$GITHUB_OUTPUT:/app" 

    steps:
    - name : create change
      run: | 
        # sndevopscli create change -p "{\"changeStepDetails\":{\"timeout\":3600,\"interval\":100},\"autoCloseChange\":true,\"attributes\":{\"short_description\":\"G Venkata Automated Software Deployment\",\"description\":\"Automated Software Deployment.\",\"assignment_group\":\"a715cd759f2002002920bde8132e7018\",\"implementation_plan\":\"Software update is tested and results can be found in Test Summaries Tab.\",\"backout_plan\":\"When software fails in production, the previous software release will be re-deployed.\",\"test_plan\":\"Testing if the software was successfully deployed or not\"}}"
        sndevopscli get change -p "{\"buildNumber\":9725199364,\"stageName\":\"ServiceNowDevOpsChange\",\"pipelineName\":\"mdavireddy%2Frest-service%2FJava+CI+with+Gradle\"}" #If we are placing get change cli command in the same job where we are creating change then no need to mention the changeDetails.
        echo $(pwd)
        echo $GITHUB_OUTPUT
        cat $GITHUB_OUTPUT
       
