name: rest-service
on: workflow_dispatch
jobs:
  Step1:
    name: Step1
    runs-on: ubuntu-latest
    steps:
      - name: 1step
        run: echo "Hello World!"
  Step2:
    name: Step2
    needs: Step1
    runs-on: ubuntu-latest
    steps:
      - name: 1step
        run: echo "Hello World!"
  ServiceNowDevOpsChange:
    needs: Step2
    runs-on: ubuntu-latest
    name: ServiceNow DevOps Change
    steps:
      - name: ServiceNow DevOps Change
        uses: ServiceNow/servicenow-devops-change@v3.0.0
        with:
          devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'ServiceNow DevOps Change'
          change-request: '{"setCloseCode":"true","autoCloseChange":true,"attributes":{"short_description":"Automated Software Deployment","description":"Automated Software Deployment.","assignment_group":"a715cd759f2002002920bde8132e7018","implementation_plan":"Software update is tested and results can be found in Test Summaries Tab; When the change is approved the implementation happens automated by the CICD pipeline within the change planned start and end time window.","backout_plan":"When software fails in production, the previous software release will be re-deployed.","test_plan":"Testing if the software was successfully deployed"}}'
          interval: '100'
          timeout: '3600'
          changeCreationTimeOut: '3600'
          abortOnChangeCreationFailure: true
          abortOnChangeStepTimeout: true

